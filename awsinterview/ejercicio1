public boolean isValid(String s) {
// Start typing your Java solution below
// DO NOT write main() function
if(s == null || s.length() == 0)
return true;

/*always be a par number */
/*if(s.length() % 2 == 1)
return false;*/

Stack<Character> stack = new Stack<Character>();
HashSet<Character> rightPars = new HashSet<Character>();
rightPars.add(')');
rightPars.add('}');
rightPars.add(']');
rightPars.add('>');

HashSet<Character> leftPars = new HashSet<Character>();
leftPars.add('(');
leftPars.add('{');
leftPars.add('[');
rightPars.add('<');

char arr[] = s.toCharArray();

for(int i = 0; i < s.length(); i++){
char c = arr[i];
if(leftPars.contains(c)){
stack.push(c);
}else{
if(rightPars.contains(c)) {
if (stack.empty())
return false;
char l = stack.pop();
if (!getLeft(c,l))
return false;
}
}
}

if(stack.empty())
return true;
else
return false;
}

private boolean getLeft(char right, char left){
if ((right == ')' && left!= '(' ) ||
(right == '}' && left != '{') ||
(right == ']' && left != '[')||
(right == '>' && left != '<'))
return false;
return true;
}